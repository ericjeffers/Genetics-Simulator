/*int track=rand()%10;

	if(track==0)
	{
		WallCount=9;

		walls[0]=new Wall(1,500,499,500);
		walls[1]=new Wall(-20,132,123,285);
		walls[2]=new Wall(104,285,203,277);
		walls[3]=new Wall(202,275,271,344);
		walls[4]=new Wall(271,344,320,344);
		walls[5]=new Wall(321,345,354,318);
		walls[6]=new Wall(354,318,394,324);
		walls[7]=new Wall(394,324,429,390);
		walls[8]=new Wall(429,391,498,401);
	}

	else if(track==1)
	{
		WallCount=9;

		walls[0]=new Wall(1,500,499,500);
		walls[1]=new Wall(-20,75,100,250);
		walls[2]=new Wall(100,250,150,300);
		walls[3]=new Wall(150,300,200,350);
		walls[4]=new Wall(200,350,300,370);
		walls[5]=new Wall(300,370,350,360);
		walls[6]=new Wall(350,360,400,340);
		walls[7]=new Wall(400,340,450,350);
		walls[8]=new Wall(450,350,498,375);
	}

	else if(track==2)
	{
		WallCount=7;

		walls[0]=new Wall(1,500,499,500);
		walls[1]=new Wall(-20,60,150,350);
		walls[2]=new Wall(150,350,225,425);
		walls[3]=new Wall(225,425,300,470);
		walls[4]=new Wall(300,470,400,495);
		walls[5]=new Wall(400,495,450,498);
		walls[6]=new Wall(450,498,498,498);
	}

	else if(track==3)
	{
		WallCount=9;

		walls[0]=new Wall(1,500,499,500);
		walls[1]=new Wall(-20,75,75,115);
		walls[2]=new Wall(75,115,150,200);
		walls[3]=new Wall(150,200,225,265);
		walls[4]=new Wall(225,265,300,300);
		walls[5]=new Wall(300,300,340,310);
		walls[6]=new Wall(340,310,380,305);
		walls[7]=new Wall(380,305,430,320);
		walls[8]=new Wall(430,320,498,370);
	}

	else if(track==4)
	{
		WallCount=10;

		walls[0]=new Wall(1,500,499,500);
		walls[1]=new Wall(-20,120,100,250);
		walls[2]=new Wall(100,250,150,325);
		walls[3]=new Wall(150,325,200,380);
		walls[4]=new Wall(200,380,250,410);
		walls[5]=new Wall(250,410,300,405);
		walls[6]=new Wall(300,405,350,390);
		walls[7]=new Wall(350,390,380,390);
		walls[8]=new Wall(380,390,415,410);
		walls[9]=new Wall(415,410,455,445);
	}

	else if(track==5)
	{
		WallCount=9;

		walls[0]=new Wall(1,500,499,500);
		walls[1]=new Wall(-20,60,50,100);
		walls[2]=new Wall(50,100,75,120);
		walls[3]=new Wall(75,120,150,120);
		walls[4]=new Wall(150,120,200,180);
		walls[5]=new Wall(200,180,260,240);
		walls[6]=new Wall(260,240,300,265);
		walls[7]=new Wall(300,265,400,350);
		walls[8]=new Wall(400,350,498,425);
	}

	else if(track==6)
	{
		WallCount=4;

		walls[0]=new Wall(1,500,499,500);
		walls[1]=new Wall(-20,75,200,300);
		walls[2]=new Wall(200,300,400,400);
		walls[3]=new Wall(400,400,498,395);
	}

	else if(track==7)
	{
		WallCount=10;

		walls[0]=new Wall(1,500,499,500);
		walls[1]=new Wall(-20,150,125,225);
		walls[2]=new Wall(125,225,175,250);
		walls[3]=new Wall(175,250,200,245);
		walls[4]=new Wall(200,245,250,250);
		walls[5]=new Wall(250,250,300,285);
		walls[6]=new Wall(300,285,375,315);
		walls[7]=new Wall(375,315,425,305);
		walls[8]=new Wall(425,305,460,320);
		walls[9]=new Wall(460,320,498,340);
	}

	else if(track==8)
	{
		WallCount=10;

		walls[0]=new Wall(1,500,499,500);
		walls[1]=new Wall(-20,75,100,350);
		walls[2]=new Wall(100,350,175,465);
		walls[3]=new Wall(175,465,250,495);
		walls[4]=new Wall(250,495,300,499);
		walls[5]=new Wall(300,499,325,495);
		walls[6]=new Wall(325,495,350,487);
		walls[7]=new Wall(350,487,400,480);
		walls[8]=new Wall(400,480,450,487);
		walls[9]=new Wall(450,487,498,498);
	}

	for(int i=0; i<WallCount; i++)
			thescene->addItem(walls[i]);*/
